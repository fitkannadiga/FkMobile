{"version":3,"sources":["webpack:///./src/app/pages/nutrient-graph/nutrient-graph.module.ts","webpack:///./src/app/pages/nutrient-graph/nutrient-graph.page.html","webpack:///./src/app/pages/nutrient-graph/nutrient-graph.page.scss","webpack:///./src/app/pages/nutrient-graph/nutrient-graph.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEa;AAE1D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAWF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBpC,+RAA+R,MAAM,6CAA6C,KAAK,4FAA4F,KAAK,uFAAuF,gBAAgB,4GAA4G,eAAe,2BAA2B,wOAAwO,yD;;;;;;;;;;;ACA75B,sDAAsD,6BAA6B,EAAE,wBAAwB,sBAAsB,EAAE,8CAA8C,qBAAqB,wBAAwB,EAAE,+CAA+C,uyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/N;AACsB;AAC/B;AASzC;IAYE,2BAAmB,eAAqC,EAAS,MAAc;QAA5D,oBAAe,GAAf,eAAe,CAAsB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAV/E,aAAQ,GAAG,EAAE,CAAC;QAWZ,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAElC,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,EAAC;YAC/B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;SAC/B;aAAM,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,EAAC;YACtC,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;SAC/B;QAGD,8CAA8C;QAC9C,oCAAoC;QACpC,2DAA2D;IAE7D,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACvE,CAAC;IAED,0CAAc,GAAd;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAGD,oDAAwB,GAAxB,UAAyB,OAAO,EAAE,KAAK;QACrC,IAAI,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,GAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACjF,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,GAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QAClF,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,GAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QAE5E,8DAA8D;QAC9D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,qCAAS,GAAT,UAAU,KAAK,EAAE,QAAQ,EAAE,IAAI;QAC7B,QAAQ,CAAC,SAAS,CAAC,UAAU,EAC7B;YACM,MAAM,EAAE,KAAK;YACb,aAAa,EAAE,uFAAuF;YACtG,eAAe,EAAE,IAAI;YACrB,aAAa,EAAE,IAAI;YACnB,WAAW,EAAE,6BAA6B;YAC1C,eAAe,EAAE,KAAK;YACtB,YAAY,EAAE,UAAU;YACxB,YAAY,EAAE,UAAU;YACxB,OAAO,EAAE,OAAO;YAChB,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE;gBACR,SAAS;gBACT,SAAS;gBACT,SAAS;aACV;YACD,QAAQ,EAAE;gBACR,SAAS,EAAE,IAAI;gBACf,OAAO,EAAE,QAAQ;gBACjB,YAAY,EAAE,QAAQ;aACvB;YACD,QAAQ,EAAE,EAAE;YACZ,cAAc,EAAE;gBACd;oBACE,UAAU,EAAE,wBAAwB;oBACpC,UAAU,EAAE,KAAK;iBAClB;gBACD;oBACE,UAAU,EAAE,mBAAmB;oBAC/B,UAAU,EAAE,QAAQ;iBACrB;gBACD;oBACE,UAAU,EAAE,eAAe;oBAC3B,UAAU,EAAE,IAAI;iBACjB;aACF;SACF,CACL,CAAC;IACH,CAAC;IApGU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,0HAAyC;;SAE1C,CAAC;yCAaoC,gFAAoB,EAAiB,sDAAM;OAZpE,iBAAiB,CAiH7B;IAAD,wBAAC;CAAA;AAjH6B","file":"pages-nutrient-graph-nutrient-graph-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NutrientGraphPage } from './nutrient-graph.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NutrientGraphPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NutrientGraphPage]\n})\nexport class NutrientGraphPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Calorie Intake</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <h3> Goal - {{goal}}</h3>\\n    <P>BMR (Basal Metabolic Rate) - {{BMR}}</P>\\n    <p>Daily calorie intake based on your <i>Activity Level</i> came upto - <strong>{{TEE}} Cal/day</strong></p>\\n    <p>To reach your goal, you will have to consume - <strong>{{IntakeCalories}} Cal/day</strong> with an approximate of below breakdown.</p>\\n    <div id=\\\"chartdiv\\\" style=\\\"width: 100%; height: 300px; background-color: #FFFFFF;\\\"></div>\\n    <p id=\\\"note\\\">\\n        <i>Note: The ratio of <strong>C/P/F</strong> may also vary based on your body type. Feel free to change the ratio of macro's using our <span id=\\\"macro-calci-link\\\" (click)=\\\"showMacroCalci();\\\">Macro Calculator</span></i>\\n    </p>\\n</ion-content>\"","module.exports = \"#chartdiv div.amcharts-chart-div a {\\n  display: none !important; }\\n\\nion-content p#note {\\n  font-size: 0.7rem; }\\n\\nion-content p#note span#macro-calci-link {\\n    color: #3B4EAC;\\n    font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYWdoYXZlbmRyYXYvcHJvamVjdHMvRmtNb2JpbGUvc3JjL2FwcC9wYWdlcy9udXRyaWVudC1ncmFwaC9udXRyaWVudC1ncmFwaC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHWSx3QkFBd0IsRUFBQTs7QUFLcEM7RUFFUSxpQkFBaUIsRUFBQTs7QUFGekI7SUFJWSxjQUFjO0lBQ2QsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9udXRyaWVudC1ncmFwaC9udXRyaWVudC1ncmFwaC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY2hhcnRkaXYge1xuICAgIGRpdi5hbWNoYXJ0cy1jaGFydC1kaXYge1xuICAgICAgICBhIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuaW9uLWNvbnRlbnQge1xuICAgIHAjbm90ZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMC43cmVtO1xuICAgICAgICBzcGFuI21hY3JvLWNhbGNpLWxpbmsge1xuICAgICAgICAgICAgY29sb3I6ICMzQjRFQUM7XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NutrientGraphService } from '../../api/nutrient-graph.service';\nimport { Router } from '@angular/router';\n\ndeclare var AmCharts: any;\n\n@Component({\n  selector: 'app-nutrient-graph',\n  templateUrl: './nutrient-graph.page.html',\n  styleUrls: ['./nutrient-graph.page.scss'],\n})\nexport class NutrientGraphPage implements OnInit {\n\n  userInfo = {};\n  BMR: any;\n  TEE: any;\n  IntakeCalories: any;\n  goal: string;\n  breakRation: string;\n  carbs: any;\n  proteins: any;\n  fats: any;\n\n  constructor(public nutrientService: NutrientGraphService, public router: Router) {\n    let userData = this.nutrientService.getGraphData();\n    this.userInfo = userData[0];\n    this.BMR = userData[1];\n    this.TEE = userData[2];\n    this.IntakeCalories = userData[3];\n    \n    if(this.userInfo['goal'] == \"fl\"){\n      this.goal = \"Fat Loss\";\n      this.breakRation = \"25.45.30\";\n    } else if(this.userInfo['goal'] == \"mb\"){\n      this.goal = \"Muscle Building\";\n      this.breakRation = \"40.35.25\";\n    } else {\n      this.goal = \"Maintain Weight\";\n      this.breakRation = \"50.30.20\";\n    }\n    \n\n    // console.log(\"this.userInfo\", this.userInfo)\n    // console.log(\"this.BMR\", this.BMR)\n    // console.log(\"this.IntakeCalories\", this.IntakeCalories);\n\n  }\n\n  ngOnInit() {\n    this.calculateCaloriesForGoal(this.IntakeCalories, this.breakRation);\n  }\n\n  showMacroCalci(){\n    this.router.navigateByUrl('/macros-calci');\n  }\n\n\n  calculateCaloriesForGoal(new_bmr, ratio){\n    var ratioArray = ratio.split(\".\");\n    var carbs = Math.ceil(Math.round(((new_bmr*Math.round(ratioArray[0]))/100)/4));\n\t\tvar proteins = Math.ceil(Math.round(((new_bmr*Math.round(ratioArray[1]))/100)/4));\n\t\tvar fats = Math.ceil(Math.round(((new_bmr*Math.round(ratioArray[2]))/100)/9));\n\n    // console.log(\"data passed to chart\", carbs, proteins, fats);\n    this.loadChart(carbs, proteins, fats);\n    this.carbs = carbs;\n    this.proteins = proteins;\n    this.fats = fats;\n  }\n\n  loadChart(carbs, proteins, fats){\n    AmCharts.makeChart(\"chartdiv\",\n\t\t\t\t{\n          \"type\": \"pie\",\n          \"balloonText\": \"[[title]]<br><span style='font-size:14px'><b>[[value]] gms</b> ([[percents]]%)</span>\",\n          \"pullOutRadius\": \"0%\",\n          \"innerRadius\": \"12\",\n          \"labelText\": \"[[title]]: [[percents]] gms\",\n          \"labelsEnabled\": false,\n          \"titleField\": \"category\",\n          \"valueField\": \"column-1\",\n          \"theme\": \"light\",\n          \"allLabels\": [],\n          \"balloon\": {},\n          \"colors\": [\n            \"#286383\",\n            \"#3A3A3A\",\n            \"#47ADE0\"\n          ],\n          \"legend\": {\n            \"enabled\": true,\n            \"align\": \"center\",\n            \"markerType\": \"circle\"\n          },\n          \"titles\": [],\n          \"dataProvider\": [\n            {\n              \"category\": \"Carbohydrates [in gms]\",\n              \"column-1\": carbs\n            },\n            {\n              \"category\": \"Proteins [in gms]\",\n              \"column-1\": proteins\n            },\n            {\n              \"category\": \"Fats [in gms]\",\n              \"column-1\": fats\n            }\n          ]\n        }\n\t\t\t);\n  }\n\n  // showSampleDiet(){\n  //   this.navCtrl.push(DietPlanPage, {\n  //     'bmr': this.BMR,\n  //     'intake': this.IntakeCalories,\n  //     'carbs': this.carbs,\n  //     'proteins': this.proteins,\n  //     'fats': this.fats,\n  //     'goal': this.goal\n  //   });\n  // }\n\n}\n"],"sourceRoot":""}